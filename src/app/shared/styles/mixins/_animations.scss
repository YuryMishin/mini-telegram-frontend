// üé¨ Animation Mixins –¥–ª—è telegram-–ø–æ–¥–æ–±–Ω—ã—Ö –∞–Ω–∏–º–∞—Ü–∏–π

// –ë–∞–∑–æ–≤—ã–µ –∞–Ω–∏–º–∞—Ü–∏–∏
@mixin fade-in($duration: 0.3s, $delay: 0s) {
  opacity: 0;
  animation: fadeIn $duration ease-out $delay forwards;
}

@mixin fade-out($duration: 0.2s, $delay: 0s) {
  animation: fadeOut $duration ease-in $delay forwards;
}

@mixin slide-in-right($duration: 0.3s, $distance: 16px) {
  opacity: 0;
  transform: translateX($distance);
  animation: slideInRight $duration ease-out forwards;

  @keyframes slideInRight {
    to {
      opacity: 1;
      transform: translateX(0);
    }
  }
}

@mixin slide-in-left($duration: 0.3s, $distance: 16px) {
  opacity: 0;
  transform: translateX(-$distance);
  animation: slideInLeft $duration ease-out forwards;

  @keyframes slideInLeft {
    to {
      opacity: 1;
      transform: translateX(0);
    }
  }
}

@mixin slide-up($duration: 0.3s, $distance: 16px) {
  opacity: 0;
  transform: translateY($distance);
  animation: slideUp $duration ease-out forwards;

  @keyframes slideUp {
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }
}

// –°–ø–µ—Ü–∏—Ñ–∏—á–Ω—ã–µ –∞–Ω–∏–º–∞—Ü–∏–∏ –¥–ª—è —Å–æ–æ–±—â–µ–Ω–∏–π
@mixin message-appear($duration: 0.4s) {
  opacity: 0;
  transform: translateY(8px) scale(0.98);
  animation: messageAppear $duration cubic-bezier(0.25, 0.46, 0.45, 0.94) forwards;

  @keyframes messageAppear {
    0% {
      opacity: 0;
      transform: translateY(8px) scale(0.98);
    }
    60% {
      opacity: 0.8;
      transform: translateY(-2px) scale(1.01);
    }
    100% {
      opacity: 1;
      transform: translateY(0) scale(1);
    }
  }
}

@mixin message-disappear($duration: 0.3s) {
  animation: messageDisappear $duration ease-in forwards;

  @keyframes messageDisappear {
    0% {
      opacity: 1;
      transform: scale(1);
    }
    100% {
      opacity: 0;
      transform: scale(0.95);
    }
  }
}

// Typing –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –∞–Ω–∏–º–∞—Ü–∏—è
@mixin typing-dots($dot-size: 6px, $color: var(--color-primary)) {
  .typing-dot {
    width: $dot-size;
    height: $dot-size;
    border-radius: 50%;
    background-color: $color;
    display: inline-block;
    margin: 0 1px;
    animation: typingBounce 1.4s infinite ease-in-out both;

    &:nth-child(1) { animation-delay: -0.32s; }
    &:nth-child(2) { animation-delay: -0.16s; }
    &:nth-child(3) { animation-delay: 0s; }
  }

  @keyframes typingBounce {
    0%, 80%, 100% {
      transform: scale(0.8);
      opacity: 0.5;
    }
    40% {
      transform: scale(1);
      opacity: 1;
    }
  }
}

// –ü—É–ª—å—Å–∞—Ü–∏—è –¥–ª—è –æ–Ω–ª–∞–π–Ω —Å—Ç–∞—Ç—É—Å–∞
@mixin online-pulse($color: #10b981, $size: 12px) {
  width: $size;
  height: $size;
  background-color: $color;
  border-radius: 50%;
  position: relative;

  &::before {
    content: '';
    position: absolute;
    top: -2px;
    left: -2px;
    right: -2px;
    bottom: -2px;
    border-radius: 50%;
    border: 2px solid $color;
    opacity: 0;
    animation: onlinePulse 2s infinite;
  }

  @keyframes onlinePulse {
    0% {
      transform: scale(1);
      opacity: 1;
    }
    100% {
      transform: scale(1.4);
      opacity: 0;
    }
  }
}

// Hover —ç—Ñ—Ñ–µ–∫—Ç—ã
@mixin hover-lift($shadow: 0 4px 12px rgba(0, 0, 0, 0.1)) {
  transition: all 0.2s ease;

  &:hover {
    transform: translateY(-1px);
    box-shadow: $shadow;
  }
}

@mixin hover-glow($color: var(--color-primary), $opacity: 0.2) {
  transition: box-shadow 0.2s ease;

  &:hover {
    box-shadow: 0 0 0 4px rgba($color, $opacity);
  }
}

// –ú–æ–¥–∞–ª—å–Ω—ã–µ –æ–∫–Ω–∞ –∞–Ω–∏–º–∞—Ü–∏–∏
@mixin modal-enter($duration: 0.2s) {
  opacity: 0;
  transform: scale(0.95);
  animation: modalEnter $duration ease-out forwards;

  @keyframes modalEnter {
    to {
      opacity: 1;
      transform: scale(1);
    }
  }
}

@mixin modal-backdrop($duration: 0.15s) {
  opacity: 0;
  animation: backdropFadeIn $duration ease-out forwards;

  @keyframes backdropFadeIn {
    to {
      opacity: 1;
    }
  }
}

// Toast –∞–Ω–∏–º–∞—Ü–∏–∏
@mixin toast-slide-in($direction: 'right', $distance: 100%) {
  @if $direction == 'right' {
    transform: translateX($distance);
  } @else if $direction == 'left' {
    transform: translateX(-$distance);
  } @else if $direction == 'top' {
    transform: translateY(-$distance);
  } @else {
    transform: translateY($distance);
  }

  opacity: 0;
  animation: toastSlideIn 0.3s cubic-bezier(0.25, 0.46, 0.45, 0.94) forwards;

  @keyframes toastSlideIn {
    to {
      transform: translateX(0) translateY(0);
      opacity: 1;
    }
  }
}

// Skeleton loading –∞–Ω–∏–º–∞—Ü–∏—è
@mixin skeleton-wave() {
  background: linear-gradient(
      90deg,
      transparent,
      rgba(255, 255, 255, 0.4),
      transparent
  );
  background-size: 200% 100%;
  animation: skeletonWave 1.5s infinite;

  @keyframes skeletonWave {
    0% {
      background-position: -200% 0;
    }
    100% {
      background-position: 200% 0;
    }
  }

  .dark & {
    background: linear-gradient(
        90deg,
        transparent,
        rgba(255, 255, 255, 0.1),
        transparent
    );
    background-size: 200% 100%;
  }
}

// –£—Ç–∏–ª–∏—Ç–∞ –¥–ª—è –∞–Ω–∏–º–∞—Ü–∏–∏ –ø—Ä–∏ —Å–∫—Ä–æ–ª–ª–µ
@mixin animate-on-scroll($animation-name, $duration: 0.6s, $delay: 0s) {
  opacity: 0;
  transform: translateY(20px);
  transition: all $duration ease $delay;

  &.in-view {
    opacity: 1;
    transform: translateY(0);
    animation: $animation-name $duration ease $delay;
  }
}

// –ü–µ—Ä—Ñ–æ—Ä–º–∞–Ω—Å –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –¥–ª—è –∞–Ω–∏–º–∞—Ü–∏–π
@mixin will-change-auto() {
  will-change: transform, opacity;

  &:hover,
  &:focus,
  &.animating {
    will-change: transform, opacity;
  }

  &:not(:hover):not(:focus):not(.animating) {
    will-change: auto;
  }
}

// –†–µ—Å–ø–æ–Ω—Å–∏–≤–Ω—ã–µ –∞–Ω–∏–º–∞—Ü–∏–∏ (–æ—Ç–∫–ª—é—á–µ–Ω–∏–µ –Ω–∞ —Å–ª–∞–±—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞—Ö)
@mixin respect-motion-preference() {
  @media (prefers-reduced-motion: reduce) {
    animation: none !important;
    transition: none !important;
    transform: none !important;
  }
}
